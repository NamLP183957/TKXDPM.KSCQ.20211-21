{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\Nam04_Ky1\\\\XayDungPhatTrienPhanMem\\\\TKXDPM.KSCQ.20211-21\\\\Software_Programing\\\\font_end\\\\src\\\\components\\\\station\\\\ListStationScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ListStation from './ListStation';\nimport StationDetail from './StationDetail';\nimport { getStationBySearchKey, getListStation } from \"../../services/ViewStation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListStationScreen() {\n  _s();\n\n  const [listStation, setListStation] = useState([]);\n  const [error, setError] = useState();\n  const [toggle, setToggle] = useState(false);\n  const [stationDetail, setStationDetail] = useState();\n  const [searchKey, setSearchKey] = useState(\"\");\n  useEffect(() => {\n    (async () => {\n      try {\n        //const resp = await axios.get(\"http://localhost:8080/api/stations/\");\n        const resp = await getListStation();\n\n        if (resp.status === 200) {\n          setListStation(resp.data);\n        } else {\n          setError(\"Không thể tải dữ liệu\");\n        }\n      } catch (error) {\n        setError(\"Không thể tải dữ liệu\");\n      }\n    })();\n  }, []);\n\n  const handleToggle = station => {\n    setToggle(prev => !prev);\n    console.log(station);\n    setStationDetail(station);\n  };\n\n  const handleOnChange = event => {\n    const key = event.target.value;\n    setSearchKey(key);\n\n    if (key !== \"\") {\n      (async () => {\n        try {\n          const resp = await getStationBySearchKey(key);\n\n          if (resp.status === 200) {\n            setListStation(resp.data);\n          }\n        } catch (error) {\n          setError(\"Không thể tải dữ liệu\");\n        }\n      })();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"col-xl-8\",\n        children: \"Danh s\\xE1ch b\\xE3i \\u0111\\u1EADu xe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"col-xl-3 border border-secondary\",\n        value: searchKey,\n        onChange: handleOnChange,\n        placeholder: \"Nh\\u1EADp t\\xEAn b\\xE3i \\u0111\\u1EC3 xe...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 23\n    }, this), listStation.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Kh\\xF4ng c\\xF3 b\\xE3i \\u0111\\u1EADu xe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 42\n    }, this), listStation.length > 0 && /*#__PURE__*/_jsxDEV(ListStation, {\n      listStation: listStation,\n      handleDetail: handleToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 40\n    }, this), toggle && /*#__PURE__*/_jsxDEV(StationDetail, {\n      station: stationDetail,\n      handleOnClose: () => setToggle(prev => !prev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListStationScreen, \"svzlKtZhpn4sqcfI//1IbvgeUf4=\");\n\n_c = ListStationScreen;\nexport default ListStationScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListStationScreen\");","map":{"version":3,"sources":["C:/Users/ADMIN/Documents/Nam04_Ky1/XayDungPhatTrienPhanMem/TKXDPM.KSCQ.20211-21/Software_Programing/font_end/src/components/station/ListStationScreen.js"],"names":["axios","React","useState","useEffect","ListStation","StationDetail","getStationBySearchKey","getListStation","ListStationScreen","listStation","setListStation","error","setError","toggle","setToggle","stationDetail","setStationDetail","searchKey","setSearchKey","resp","status","data","handleToggle","station","prev","console","log","handleOnChange","event","key","target","value","length"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react'\r\nimport ListStation from './ListStation';\r\nimport StationDetail from './StationDetail';\r\nimport {getStationBySearchKey, getListStation} from \"../../services/ViewStation\"\r\n\r\nfunction ListStationScreen() {\r\n    const [listStation, setListStation] = useState([]);\r\n    const [error, setError] = useState();\r\n    const [toggle, setToggle] = useState(false);\r\n    const [stationDetail, setStationDetail] = useState();\r\n    const [searchKey, setSearchKey] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            try {\r\n                //const resp = await axios.get(\"http://localhost:8080/api/stations/\");\r\n                const resp = await getListStation();\r\n                if (resp.status === 200) {\r\n                    setListStation(resp.data);\r\n                } else {\r\n                    setError(\"Không thể tải dữ liệu\")\r\n                }\r\n            } catch (error) {\r\n                setError(\"Không thể tải dữ liệu\")\r\n            }\r\n        })();\r\n\r\n    }, [])\r\n\r\n    const handleToggle = (station) => {\r\n        setToggle(prev => !prev);\r\n        console.log(station);\r\n        setStationDetail(station);\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        const key = event.target.value;\r\n        setSearchKey(key);\r\n\r\n        if (key !== \"\") {\r\n            (async() => {\r\n                try {\r\n                    const resp = await getStationBySearchKey(key);\r\n                    if (resp.status === 200) {\r\n                        setListStation(resp.data);\r\n                    }\r\n                } catch (error) {\r\n                    setError(\"Không thể tải dữ liệu\");\r\n                }\r\n                \r\n            })()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='row'>\r\n                <h3 className='col-xl-8'>Danh sách bãi đậu xe</h3>\r\n                <input \r\n                    className='col-xl-3 border border-secondary' \r\n                    value={searchKey}\r\n                    onChange={handleOnChange}    \r\n                    placeholder='Nhập tên bãi để xe...'\r\n                />\r\n            </div>\r\n            {error && <div>{error}</div>}\r\n            {listStation.length === 0 && <div>Không có bãi đậu xe</div>}\r\n            {listStation.length > 0 && <ListStation listStation={listStation} handleDetail={ handleToggle}/>}\r\n            {toggle && <StationDetail station={stationDetail} handleOnClose={() => setToggle(prev => !prev)}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListStationScreen\r\n"]},"metadata":{},"sourceType":"module"}